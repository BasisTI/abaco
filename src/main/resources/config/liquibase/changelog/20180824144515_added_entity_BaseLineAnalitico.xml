<?xml version="1.0" encoding="utf-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd
                        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

    <property name="now" value="now()" dbms="h2"/>

    <property name="now" value="current_timestamp" dbms="postgresql"/>

    <property name="floatType" value="float4" dbms="postgresql, h2"/>
    <property name="floatType" value="float" dbms="mysql, oracle, mssql"/>

    <!--
        Added the entity BaseLineAnalitico.
    -->
    <changeSet id="20180824144515-1" author="jhipster">
        <createView catalogName="baseline_analitico"
                    replaceIfExists="false"
                    schemaName="public"
                    viewName="baseline_analitico"> <![CDATA[
                    SELECT 'fd'::text AS tipo,
    c.tipo AS classificacao,
    c.impacto,
    c.analise_id,
    a.data_homologacao_software,
    b.id AS id_sistema,
    b.nome,
    b.sigla,
    c.name,
    c.grosspf AS pf,
    c.id AS id_funcao_dados,
    c.complexidade,
    f.nome AS nome_equipe,
    a.equipe_responsavel_id,
    ( SELECT count(d_1.id) AS count
           FROM der d_1
          WHERE d_1.funcao_dados_id = c.id) AS der,
    ( SELECT count(e_1.id) AS count
           FROM rlr e_1
          WHERE e_1.funcao_dados_id = c.id) AS rlr_alr
   FROM analise a
     JOIN sistema b ON a.sistema_id = b.id
     JOIN funcao_dados c ON c.analise_id = a.id
     JOIN tipo_equipe f ON a.equipe_responsavel_id = f.id
     LEFT JOIN der d ON d.funcao_dados_id = c.id
     LEFT JOIN rlr e ON e.funcao_dados_id = c.id
  WHERE c.grosspf > 0 and a.data_homologacao_software IS NOT NULL AND a.data_homologacao_software = (( SELECT max(a1.data_homologacao_software) AS max
           FROM analise a1
             JOIN funcao_dados c1 ON c1.analise_id = a1.id AND c1.name::text = c.name::text
          WHERE a1.bloqueado = true)) AND NOT (a.id IN ( SELECT a2.id
           FROM analise a2
          WHERE a2.baseline_imediatamente = true AND now() <= (a2.data_homologacao_software::date + (( SELECT contrato.dias_de_garantia
                   FROM contrato
                  WHERE contrato.id = a2.contrato_id))))) AND (upper(a.metodo_contagem::text) = 'DETALHADA'::text OR a.enviar_baseline = true AND upper(a.metodo_contagem::text) = 'ESTIMADA'::text) AND a.bloqueado = true
UNION
 SELECT 'ft'::text AS tipo,
    c.tipo AS classificacao,
    c.impacto,
    c.analise_id,
    a.data_homologacao_software,
    b.id AS id_sistema,
    b.nome,
    b.sigla,
    c.name,
    c.grosspf AS pf,
    c.id AS id_funcao_dados,
    c.complexidade,
    f.nome AS nome_equipe,
    a.equipe_responsavel_id,
    ( SELECT count(d.id) AS count
           FROM der d
          WHERE d.funcao_transacao_id = c.id) AS der,
    ( SELECT count(e.id) AS count
           FROM alr e
          WHERE e.funcao_transacao_id = c.id) AS rlr_alr
   FROM analise a
     JOIN sistema b ON a.sistema_id = b.id
     JOIN funcao_transacao c ON c.analise_id = a.id
     JOIN tipo_equipe f ON a.equipe_responsavel_id = f.id
  WHERE c.grosspf > 0 and a.data_homologacao_software IS NOT NULL AND a.data_homologacao_software = (( SELECT max(a1.data_homologacao_software) AS max
           FROM analise a1
             JOIN funcao_transacao c1 ON c1.analise_id = a1.id AND c1.name::text = c.name::text
          WHERE a1.bloqueado = true)) AND NOT (a.id IN ( SELECT a2.id
           FROM analise a2
          WHERE a2.baseline_imediatamente = true AND now() <= (a2.data_homologacao_software::date + (( SELECT contrato.dias_de_garantia
                   FROM contrato
                  WHERE contrato.id = a2.contrato_id))))) AND (upper(a.metodo_contagem::text) = 'DETALHADA'::text OR a.enviar_baseline = true AND upper(a.metodo_contagem::text) = 'ESTIMADA'::text) AND a.bloqueado = true;

 ]]>
        </createView>
    </changeSet>
    <!-- jhipster-needle-liquibase-add-changeset - JHipster will add changesets here, do not remove-->
</databaseChangeLog>
